# [[route]]
# listen_addr = "127.0.0.1:8080"
# target_addrs = ["127.0.0.1:80", "127.0.0.1:81"]
# timeout_seconds = 30
# balance_strategy = "round_robin"

[[route]]
listen_addr = "0.0.0.0:443"
target_addrs = ["192.168.1.1:80", "192.168.1.2:80"]
balance_strategy = "WeightedRoundRobin"
target_weights = { "192.168.1.1:80" = 3, "192.168.1.2:80" = 1 }
resource_endpoints = [
    "http://192.168.1.1:8080/stats",
    "http://192.168.1.2:8080/stats",
]
timeout_seconds = 10
max_requests_per_target = 150
health_check_endpoints = { "192.168.1.1:80" = "http://192.168.1.1:8080/health", "192.168.1.2:80" = "http://192.168.1.2:8080/health" }
cache_enabled_endpoints = ["/api/v1/data"]
cache_ttl_seconds = 120
cache_capacity = 2000

# [[route]]
# listen_addr = "127.0.0.1:8081"
# target_addrs = ["127.0.0.1:82", "127.0.0.1:83"]
# timeout_seconds = 20
# balance_strategy = "random"


# [[route]]
# listen_addr = "127.0.0.1:8080"
# target_addrs = ["127.0.0.1:80", "127.0.0.1:81"]
# timeout_seconds = 30
# balance_strategy = "ratelimiting"
# max_requests_per_target = 100

# [[route]]
# listen_addr = "0.0.0.0:8080"
# target_addrs = ["http://server1:8080", "http://server2:8080"]
# resource_endpoints = [
#     "http://server1:8081/resources",
#     "http://server2:8081/resources",
# ]
# balance_strategy = "resourcebased"
# timeout_seconds = 5
# max_requests_per_target = 100
# cache_enabled_endpoints = ["/api/data", "/api/static"]
# cache_capacity = 100

# [[route]]
# listen_addr = "127.0.0.1:8080"
# target_addrs = ["192.168.1.1:80", "192.168.1.2:80"]
# target_weights = { "192.168.1.1:80" = 3, "192.168.1.2:80" = 1 }
# resource_usage_api = [
#     "http://192.168.1.1:8080/usage",
#     "http://192.168.1.2:8080/usage",
# ]
# timeout_seconds = 5
# balance_strategy = "weightedroundrobin"
# max_requests_per_target = 100
# resource_endpoints = [
#     "http://192.168.1.1:8080/resource",
#     "http://192.168.1.2:8080/resource",
# ]
# cache_enabled_endpoints = [
#     "http://192.168.1.1:8080/cache",
#     "http://192.168.1.2:8080/cache",
# ]
# cache_ttl_seconds = 60

[retry_strategy]
max_delay_secs = 2
max_attempts = 5
initial_delay_millis = 100
timeout_secs = 5
